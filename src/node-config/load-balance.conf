# This configures a load balancer to evenly distribute traffic.
#
# More information about the configuration options is available on 
#   * the English wiki - http://wiki.nginx.org/Main

worker_processes  3; # How about one for each backend

events {
    worker_connections  1024;
}

http {

  # Point the load balancer at three of our app servers.
  # Send traffic to all of them:
  #
  #  - When the server fails 2x in a 5 sec window, stop sending traffic
  #    to that app server.
  #
  upstream distrivia {
    # Can't use ip_hash because we use "backup" 
    server ec2-50-16-110-52.compute-1.amazonaws.com:443   max_fails=2 fail_timeout=5s;
    server ec2-184-73-37-124.compute-1.amazonaws.com:443  max_fails=2 fail_timeout=5s;
    server ec2-50-17-133-27.compute-1.amazonaws.com:443   max_fails=2 fail_timeout=5s;
    server ec2-50-17-21-159.compute-1.amazonaws.com:443 backup;
    server ec2-50-17-163-21.compute-1.amazonaws.com:443 backup;
  }

  #
  # Rewrite all http requests to https
  #
  server {
    listen 80;
    rewrite ^(.*) https://$host$1 permanent;
  }

  #
  # The server defines which requests we will respond to:
  #
  server {
    listen 443 default ssl;
    server_name "_"; # Respond to any server name

    # See http://wiki.nginx.org/HttpSslModule for more information.
    ssl_certificate     /home/burny/src/distributed-systems/src/server/ssl-cert/distrivia.lame.ws.ca-bundle.crt;
    ssl_certificate_key /home/burny/src/distributed-systems/src/server/ssl-cert/distrivia.lame.ws.key;
    ssl_session_timeout  70m;
    location / {
      # Should always point to the upstream we define above
      proxy_pass https://distrivia;
      ### force timeouts if one of backend is died ##
      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

      ### Set headers ####
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      ### Most PHP, Python, Rails, Java App can use this header ###
      proxy_set_header X-Forwarded-Proto https;

      ### By default we don't want to redirect it ####
      proxy_redirect     off;
    }
  }
}
